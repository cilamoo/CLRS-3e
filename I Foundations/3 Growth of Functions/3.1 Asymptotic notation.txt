3.1 Asymptotic notation

The notations we use to describe the asymptotic running time of an algorithm
are defined in terms of functions whose domains are the set of natural numbers
N = {0,1,2,...}. Such notations are convenient for describing the worst-case
running-time function T(n), which usually is defined only on integer input sizes.

1.Asymptotic notation, functions, and running times

Asymptotic notation actually applies to functions;

1).Θ-notation

Figure 3.1(a) gives an intuitive picture of functions f(n) and g(n), where
f(n) = Θ(g(n)). For all values of n at and to the right of n0, the value of f(n)
lies at or above c1g(n) and at or below c2g(n). In other words, for all n ≥ n0, the
function f(n) is equal to g(n) to within a constant factor. We say that g(n) is an
asymptotically tight bound for f(n).

2).O-notation

3).Ω-notation

4).Asymptotic notation in equations and inequalities

5).o-notation
The asymptotic upper bound provided by O-notation may or may not be asymptotically
tight. The bound 2n^2 = O(n^2) is asymptotically tight, but the bound
2n = O(n^2) is not. We use o-notation to denote an upper bound that is not asymptotically
tight.

6).ω-notation

We use ω-notation to denote a lower bound that is not asymptotically tight.

2.Comparing functions
Transitivity:
Reflexivity:
Symmetry:
Transpose symmetry:
Trichotomy:


13.1 Properties of red-black trees

A red-black tree is a binary search tree with one extra bit of storage per node: its
color, which can be either RED or BLACK. By constraining the node colors on any
simple path from the root to a leaf, red-black trees ensure that no such path is more
than twice as long as any other, so that the tree is approximately balanced.

Each node of the tree now contains the attributes color, key, left, right, and p. If
a child or the parent of a node does not exist, the corresponding pointer attribute
of the node contains the value NIL. We shall regard these NILs as being pointers to
leaves (external nodes) of the binary search tree and the normal, key-bearing nodes
as being internal nodes of the tree.

A red-black tree is a binary tree that satisfies the following red-black properties:
1. Every node is either red or black.
2. The root is black.
3. Every leaf (NIL) is black.
4. If a node is red, then both its children are black.
5. For each node, all simple paths from the node to descendant leaves contain the
   same number of black nodes.

As a matter of convenience in dealing with boundary conditions in red-black
tree code, we use a single sentinel to represent NIL (see page 238). For a red-black
tree T , the sentinel T:nil is an object with the same attributes as an ordinary node
in the tree. Its color attribute is BLACK, and its other attributes—p, left, right,
and key—can take on arbitrary values.

We call the number of black nodes on any simple path from, but not including, a
node x down to a leaf the black-height of the node, denoted bh(x).

We define the black-height of a red-black tree to be the black-height of its root.

Lemma 13.1
A red-black tree with n internal nodes has height at most 2lg(n+1).

Proof :
We start by showing that the subtree rooted at any node x contains at least
2^bh(x)-1 internal nodes.

let h be the height of the tree.According to property 4, at least half the 
nodes on any simple path from the root to a leaf, not including the root, must
be black.Consequently, the black-height of the root must
be at least h/2; thus,
n ≥ 2^(h/2) - 1 

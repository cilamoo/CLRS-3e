13.2 Rotations

The pseudocode for LEFT-ROTATE assumes that x.right ≠ T.nil.

LEFT-ROTATE(T,x)
1  y = x.right                   // set y
2  x.right = y.left              // turn y’s left subtree into x’s right subtree
3  if y.left ≠ T.nil
4      y.left.p = x 
5  y.p = x.p                    // link x’s parent to y
6  if x.p == T.nil
7      T.root = y 
8  elseif x == x.p.left
9      x.p.left = y
10 else x.p.right = y 
11 y.left = x                   // put x on y’s left
12 x.p = y 

The pseudocode for RIGHT-ROTATE assumes that x.left ≠ T.nil.

RIGHT-ROTATE(T,x)
1  y = x.left                   // set y
2  x.left = y.right             // turn y's right subtree into x's left subtree
3  if y.right ≠ T.nil 
4      y.right.p = x
5  y.p = x.p                    // link x's parent to y 
6  if x.p == T.nil
7      T.root = y
8  elseif x = x.p.left 
9      x.p.left = y
10 else x.p.right = y 
11 y.right = x                 // put x on y's right 
12 x.p = y

Both LEFT-ROTATE and RIGHTROTATE run in O(1) time.


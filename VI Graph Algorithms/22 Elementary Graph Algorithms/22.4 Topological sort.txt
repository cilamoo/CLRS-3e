22.4 Topological sort —— directed acyclic graph,dag
//拓扑排序是图的所有顶点线性序列 
A topological sort of a dag G = (V,E) is a linear ordering of all its vertices such that 
if G contains an edge (u,v), then u appears before v in the ordering. (If the graph contains a cycle,
then no linear ordering is possible.) We can view a topological sort of a graph as
an ordering of its vertices along a horizontal line so that all directed edges go from
left to right.

//许多应用使用拓扑排序指示事件的优先权 
Many applications use directed acyclic graphs to indicate precedences among
events.

//行2,只要一个顶点被完全访问了,那么将它插入链表的前头, 由于该顶点最先完成，
//则结束时间要比后续的结束时间小,因此, 整个链表是线性有序的,按结束时间从大到小
//排列
TOPOLOGICAL-SORT(G)
1 call DFS(G) to compute finishing times v.f for each vertex v
2 as each vertex is finished, insert it onto the front of a linked list
3 return the linked list of vertices

We can perform a topological sort in time Θ(V+E), since depth-first search
takes Θ(V+E) time and it takes O(1) time to insert each of the |V| vertices onto
the front of the linked list.

Lemma 22.11
A directed graph G is acyclic if and only if a depth-first search of G yields no back
edges.

Theorem 22.12
TOPOLOGICAL-SORT produces a topological sort of the directed acyclic graph
provided as its input.
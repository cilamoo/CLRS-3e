24.2 Single-source shortest paths in directed acyclic graphs

By relaxing the edges of a weighted dag (directed acyclic graph) G = (V,E)
according to a topological sort of its vertices, we can compute shortest paths from
a single source in Θ(V+E) time. Shortest paths are always well defined in a dag,
since even if there are negative-weight edges, no negative-weight cycles can exist.

The algorithm starts by topologically sorting the dag (see Section 22.4) to impose
a linear ordering on the vertices. If the dag contains a path from vertex u to
vertex v, then u precedes v in the topological sort. We make just one pass over the
vertices in the topologically sorted order. As we process each vertex, we relax each
edge that leaves the vertex.

DAG-SHORTEST-PATHS(G,w,s)
1 topologically sort the vertices of G
2 INITIALIZE-SINGLE-SOURCE(G,s)
3 for each vertex u, taken in topologically sorted order
4      for each vertex v ∈ G.Adj[u]
5         RELAX(u,v,w)

As shown in Section 22.4,the topological sort of line 1 takes Θ(V+E) time. 
The call of INITIALIZESINGLE-SOURCE in line 2 takes Θ(V) time. The for loop of lines 3–5 makes one
iteration per vertex. Altogether, the for loop of lines 4–5 relaxes each edge exactly
once. (We have used an aggregate analysis here.) Because each iteration of the
inner for loop takes Θ(1) time, the total running time is Θ(V+E), which is linear
in the size of an adjacency-list representation of the graph.

//算法的一个应用,PERT,p657 
//“PERT” is an acronym for “program evaluation and review technique.”
An interesting application of this algorithm arises in determining critical paths
in PERT chart analysis.(“PERT” is an acronym for “program evaluation and review technique.”)


